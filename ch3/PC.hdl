// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

 /**
 * Above specification is wrong.
 * if (reset[t] == 1) out[t + 1] = 0(Don't care other bits.)
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Not (in=reset, out=sel1);
    Inc16(in=fb, out=incOut);
    Mux16 (a[1..15]=false, b=incOut, sel=sel1, out=Mux1);
    Not (in=reset, out=notReset);
    And (a=notReset, b=load, out=sel2);
    Mux16(a=Mux1, b=in, sel=sel2, out=registerIn);
    Or (a=load, b=inc, out=loadIncOr);
    Or (a=loadIncOr, b=reset, out=loadRegister);
    Register (in=registerIn, load=loadRegister, out=out, out=fb);

}
