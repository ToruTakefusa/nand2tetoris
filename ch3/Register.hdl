// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/Register.hdl

/**
 * 16-bit register:
 * If load[t] == 1 then out[t+1] = in[t]
 * else out does not change
 */

CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux (a=outDff0, b=in[0], sel=load, out=outMux0);
    DFF (in=outMux0, out=out[0], out=outDff0);
    Mux (a=outDff1, b=in[1], sel=load, out=outMux1);
    DFF (in=outMux1, out=out[1], out=outDff1);
    Mux (a=outDff2, b=in[2], sel=load, out=outMux2);
    DFF (in=outMux2, out=out[2], out=outDff2);
    Mux (a=outDff3, b=in[3], sel=load, out=outMux3);
    DFF (in=outMux3, out=out[3], out=outDff3);
    Mux (a=outDff4, b=in[4], sel=load, out=outMux4);
    DFF (in=outMux4, out=out[4], out=outDff4);
    Mux (a=outDff5, b=in[5], sel=load, out=outMux5);
    DFF (in=outMux5, out=out[5], out=outDff5);
    Mux (a=outDff6, b=in[6], sel=load, out=outMux6);
    DFF (in=outMux6, out=out[6], out=outDff6);
    Mux (a=outDff7, b=in[7], sel=load, out=outMux7);
    DFF (in=outMux7, out=out[7], out=outDff7);
    Mux (a=outDff8, b=in[8], sel=load, out=outMux8);
    DFF (in=outMux8, out=out[8], out=outDff8);
    Mux (a=outDff9, b=in[9], sel=load, out=outMux9);
    DFF (in=outMux9, out=out[9], out=outDff9);
    Mux (a=outDff10, b=in[10], sel=load, out=outMux10);
    DFF (in=outMux10, out=out[10], out=outDff10);
    Mux (a=outDff11, b=in[11], sel=load, out=outMux11);
    DFF (in=outMux11, out=out[11], out=outDff11);
    Mux (a=outDff12, b=in[12], sel=load, out=outMux12);
    DFF (in=outMux12, out=out[12], out=outDff12);
    Mux (a=outDff13, b=in[13], sel=load, out=outMux13);
    DFF (in=outMux13, out=out[13], out=outDff13);
    Mux (a=outDff14, b=in[14], sel=load, out=outMux14);
    DFF (in=outMux14, out=out[14], out=outDff14);
    Mux (a=outDff15, b=in[15], sel=load, out=outMux15);
    DFF (in=outMux15, out=out[15], out=outDff15);
}
